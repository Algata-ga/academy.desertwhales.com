import Head from "next/head";
import Link from "next/link";
import { Container } from "react-bootstrap";
import ArticleCard from "../components/ArticleCard";
import Landing from "../components/Landing";
import style from "../styles/Index.module.css";

import getShuffledArray from "../utils/shuffleArray";

export default function Home({ latest_articles, tagged_feed, tags }) {
    return (
        <div>
            <Head>
                <title>academy</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Landing />
            <div className={style.article}>
                <div className={style.articlecontain}>
                    <div className={style.heading}>
                        <h6>Latest articles</h6>
                        <Link href="/search">
                            <a>View all</a>
                        </Link>
                    </div>

                    {/*make article card*/}
                    <div className={style.articlebox}>
                        {latest_articles.map((article) => {
                            return (
                                <ArticleCard
                                    article={article}
                                    key={article.title}
                                />
                            );
                        })}
                    </div>
                </div>
            </div>
            <div className={style.tag}>
                <div className={style.tagscontain}>
                    {tags.slice(0, 6).map((x) => (
                        <span>{x.name}</span>
                    ))}
                </div>
            </div>
            {tagged_feed.map((tag) => (
                <div className={style.article}>
                    <div className={style.articlecontain}>
                        <div className={style.heading}>
                            <h6>{tag.name}</h6>
                            <Link href={`/search?tag=${tag.name}`}>
                                <a>View all</a>
                            </Link>
                        </div>

                        {/*make article card*/}
                        <div className={style.articlebox}>
                            {tag.data.map((article) => {
                                return (
                                    <ArticleCard
                                        article={article}
                                        key={article.title}
                                    />
                                );
                            })}
                        </div>
                    </div>
                </div>
            ))}
        </div>
    );
}

export const getServerSideProps = async (context) => {
    context.res.setHeader(
        "Cache-Control",
        "public, s-maxage=30, stale-while-revalidate=15"
    );

    let response = await fetch(`${process.env.BASE_URL}/api/articles/latest`);
    const latest_articles = await response.json();

    response = await fetch(`${process.env.BASE_URL}/api/tags`);
    const tags = await response.json();

    const shuffledTags = getShuffledArray(tags);

    const tagged_feed_data = await Promise.all(
        shuffledTags
            .slice(0, 5)
            .map((x) =>
                fetch(`${process.env.BASE_URL}/api/articles/${x.name}`).then(
                    (x) => x.json()
                )
            )
    );

    const tagged_feed = shuffledTags.slice(0, 5).reduce((prev, cur, i) => {
        return [...prev, { name: cur.name, data: [...tagged_feed_data[i]] }];
    }, []);
    return { props: { latest_articles, tagged_feed, tags: shuffledTags } };
};
